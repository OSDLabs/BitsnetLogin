#!/bin/bash

# Load util functions
if ! source /usr/lib/bitsnet/util.sh > /dev/null
then
    echo "Could not load util file"
    echo "Reinstall program"
    notify-send 'BITSnet' "Please reinstall program" \
        --icon=network-transmit --hint=int:transient:1
    exit 1
fi

# Add a configuration file
if ! grep -s "username\[1\]" ~/.bitsnetrc > /dev/null
then
    echo "No bitsnetrc found"

    echo -n "Creating a bitsnetrc file... "
    if ! cp /etc/bitsnet/bitsnetrc ~/.bitsnetrc
    then
        echo "failed"
        exit 1
    else
        echo "done"
    fi
else
    source ~/.bitsnetrc
fi

if [[ ${username[1]} == "" ]]
then
    echo "Please add credentials to ~/.bitsnetrc"
    notify-send 'BITSnet' "Please add credentials to ~/.bitsnetrc" \
        --icon=network-transmit --hint=int:transient:1
    exit 1
fi

# Parse arguments
while getopts "u:p:dhUofwq" o; do
    case "${o}" in
        u)
            username=${OPTARG}
            ;;
        p)
            password=${OPTARG}
            ;;
        d)
            debug=1
            debug_msg "Going into debug mode"
            ;;
        U)
            update
            ;;
        o)
            log_out
            ;;
        f)
            f=1
            ;;

        w)
            cisco=1
            ;;
        q)
            quiet=1
            ;;
        h | * | [?])
            show_help
            ;;
    esac
done
if [[ "$f" == "1" ]]; then
    debug_msg "Forcing login attempt"
fi


debug_msg "LoginURL: $login_url"


# Check if already logged in
if [[ "$f" != "1" ]]; then
    debug_msg "Checking if already connected"
    if wget -qT 5 -t 1 --spider --no-check-certificate https://google.com
    then
        send_msg "Already logged into the BITSnet"
        exit
    fi
fi


# Check if using wifi or ethernet
debug_msg ""
debug_msg "Checking device info"
dev=$(get_device)
debug_msg "dev = $dev"

# Exit if dev = 0
if [[ "$f" == "0" && "$dev" == "0" ]]; then
    debug_msg "Exiting because dev is zero"
    send_msg "Network interface unknown."
    exit 1
fi


# Log into Cisco Hostel Wifi router if dev = 2
if [[ "$dev" == "2" && "$(hostname -I)" != "10.20"* ]]; then
    cisco=1
fi


# Login
debug_msg ""
debug_msg "Logging in"
# If dev is wifi and IP is not library IP
if [[ $cisco == "1" ]]; then
    # Log into the router
    debug_msg "Connected to wifi. Sending request to cisco router form"
    router_login
fi

# Log into the ldap
debug_msg "Logging into the LDAP"
i=1
while [[ ! -z ${username[$i]} ]]
do
    debug_msg "Trying with ID: ${username[$i]}"
    reply=$(ldap_login ${username[$i]} ${password[$i]})

    # Extract reply
    reply=$(extract_msg $reply)

    if [[ "$reply" == "You have successfully logged in" ]]; then
        break
    else
        debug_msg "$reply"
    fi
    ((i++))

done


# Display reply or send a notification
debug_msg ""
send_msg "$reply"
debug_msg "Reply sent"


# Exit
debug_msg ""
debug_msg "Exiting"
exit
