#!/bin/bash


# Load util functions
source ~/.local/lib/bitsnet/util.sh

# Add a configuration file
source ~/.bitsnetrc

# Parse arguments
while getopts "u:p:dhUof" o; do
    case "${o}" in
        u)
            username=${OPTARG}
            ;;
        p)
            password=${OPTARG}
            ;;
        d)
            debug=1
            debug_msg "Going into debug mode"
            ;;
        U)
            update
            ;;
        o)
            log_out
            ;;
        f)
            f=1
            ;;
        h | * | [?])
            show_help
            ;;
    esac
done
if [[ "$f" == "1" ]]; then
    debug_msg "Forcing login attempt"
    force_login
fi


debug_msg "Username: $username"
debug_msg "Password: $password"
debug_msg "LoginURL: $login_url"


# Check if using bitsnet
# This is being implemented by sending a spider request to the local LMS server
debug_msg "Checking if connected to bitsnet"
if ! wget -qT 5 -t 1 --spider --no-check-certificate http://photon.bits-goa.ac.in
then
    send_msg "Not connected to bitsnet"
    exit
else
    debug_msg "Connected to bitsnet"
fi


# Check if already logged in
debug_msg "Checking if already connected"
if wget -qT 5 -t 1 --spider --no-check-certificate https://google.com
then
    send_msg "Already logged into the BITSnet"
    exit
fi


# Check if username or password are empty
debug_msg "Checking if username or password is empty"
if [[ ("$username" == "") || ("$password" == "") ]]; then
    send_msg "Username or password empty"
    debug_msg "Exiting"
    exit
fi
debug_msg "Not empty"


# Check if using wifi or ethernet
debug_msg ""
debug_msg "Checking device info"
dev=$(get_device)
debug_msg "dev = $dev"

# Exit if dev = 0
if [[ "$dev" == "0" ]]; then
    debug_msg "Exiting because dev is zero"
    send_msg "Network interface unknown."
    exit
fi


# Select correct login page according to IP
# and load corresponding login_url
# Nothing to do here for now


# Login
debug_msg ""
debug_msg "Logging in"
if [[ "$dev" == "2" && "$(hostname -I)" != "10.20"* ]]; then
    # Log into the router
    debug_msg "Connected to wifi. Sending request to cisco router form"
    router_login
fi
# Log into the ldap
debug_msg "Logging into the LDAP"
reply=$(ldap_login)


# Extract reply
debug_msg "Extracting reply"
reply=$(extract_msg $reply)


# Display reply or send a notification
debug_msg ""
send_msg "$reply"
debug_msg "Reply sent"


# Exit
debug_msg ""
debug_msg "Exiting"
exit
