#!/bin/bash

# Initialise variables
reply=""
host=""
place=""
login_url=""
debug=0


# Parse arguments here
debug=1


# Add a configuration file
source bitsnet.cnf
if [[ debug -eq 1 ]]; then
	echo "DefaultUsername: $default_username"
	echo "DefaultPassword: $default_password"
	echo "DefaultLoginURL: $default_login_url"
fi

# Define functions -------------------------------------------------------------

#Sends login request and captures output in $reply
function send_request(){
	if [[ debug -eq 1 ]]; then
		echo "Place is '$place' recieved in send_request()"
	fi

	#Send login request
	reply=$(curl -ksd \
		"mode=191&username=$default_username&password=$default_password" \
		$login_url)

	#Extract the msg text
	reply="${reply##*\<message><\![CDATA[}"
	reply=$(echo "$reply" | cut -d']' -f1)

}

# Change place and $loginURL according to the IP
function change_place(){
	#get ip
	host="$(hostname -I)"

	if [[ "$host" == "10.20."* ]]; then
		place="library"
		login_url=$library_login_url
	elif [[ "$host" == "10.4."* ]]; then
		place="hostel"
		login_url=$hostel_login_url
	elif [[ "$host" == "10.30."* ]]; then
		place="academic_block"
		login_url=$academic_block_login_url
	else
		place="unknown"
		login_url=$default_login_url
	fi

	if [[ debug -eq 1 ]]; then
		echo "Place: $place"
		echo "Login URL: $login_url"
	fi
}

# End function definitions -----------------------------------------------------


# Check availability of google.com
#wget -q --spider "$test_domain"


#if [ $? -eq 0 ]; then #If we can connect

# Change place and login_url according to the IP
change_place

# Send request and capture output
send_request

#else
#	reply="You are offline"
#fi


# 	#send a notification
# 	notify-send 'BITSnet' "$reply" --icon=network-transmit
if [[ debug -eq 1 ]]; then
	echo "$reply"
fi
